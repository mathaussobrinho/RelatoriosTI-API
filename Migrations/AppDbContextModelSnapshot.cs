// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RelatoriosTI.API.Data;

#nullable disable

namespace RelatoriosTI.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RelatoriosTI.API.Models.DadosRelatorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CaminhoArquivoPdf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CriadoPorUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataGeracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRenovacaoAntivirus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRenovacaoOffice365")
                        .HasColumnType("datetime2");

                    b.Property<string>("HotelNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MelhoriasProximoMes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutrosContratos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtdLicencasAntivirus")
                        .HasColumnType("int");

                    b.Property<int>("QtdLicencasOffice365Basic")
                        .HasColumnType("int");

                    b.Property<int>("QtdLicencasOffice365Standard")
                        .HasColumnType("int");

                    b.Property<string>("StatusPreventivas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tickets")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Relatorios");
                });

            modelBuilder.Entity("RelatoriosTI.API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EhAdministrador")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoteisPermitidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2025, 10, 13, 17, 46, 16, 101, DateTimeKind.Local).AddTicks(7818),
                            EhAdministrador = true,
                            Email = "mathaus@admin",
                            HoteisPermitidos = "[]",
                            Senha = "mathaus@123"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
