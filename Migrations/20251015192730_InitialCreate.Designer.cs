// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RelatoriosTI.API.Data;

#nullable disable

namespace RelatoriosTI.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251015192730_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RelatoriosTI.API.Models.DadosRelatorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CaminhoArquivoPdf")
                        .HasColumnType("text");

                    b.Property<int>("CriadoPorUsuarioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataGeracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataRenovacaoAntivirus")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataRenovacaoOffice365")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HotelNome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MelhoriasProximoMes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OutrosContratos")
                        .HasColumnType("text");

                    b.Property<int>("QtdLicencasAntivirus")
                        .HasColumnType("integer");

                    b.Property<int>("QtdLicencasOffice365Basic")
                        .HasColumnType("integer");

                    b.Property<int>("QtdLicencasOffice365Standard")
                        .HasColumnType("integer");

                    b.Property<string>("StatusPreventivas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tickets")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPorUsuarioId");

                    b.HasIndex("DataCriacao");

                    b.HasIndex("HotelNome");

                    b.ToTable("Relatorios", "public");
                });

            modelBuilder.Entity("RelatoriosTI.API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("EhAdministrador")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HoteisPermitidos")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios", "public");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EhAdministrador = true,
                            Email = "mathaus@admin",
                            HoteisPermitidos = "[]",
                            Senha = "$2a$11$JSTxO/0C7YH34nJvss1xqOl.zwCvzLB9r9ajbI5wLAyz5LiY9Jp4y"
                        });
                });

            modelBuilder.Entity("RelatoriosTI.API.Models.DadosRelatorio", b =>
                {
                    b.HasOne("RelatoriosTI.API.Models.Usuario", "CriadoPor")
                        .WithMany()
                        .HasForeignKey("CriadoPorUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CriadoPor");
                });
#pragma warning restore 612, 618
        }
    }
}
